require("dotenv").config();
const fs = require("fs");

const TelegramBot = require("node-telegram-bot-api");
const token = process.env.BOTAPI;

const bot = new TelegramBot(token, { polling: true });

let fileContent = JSON.parse(fs.readFileSync("data.json", "utf8"));

bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  const first_name = msg.chat.first_name;

  if (msg.text) {
    const text = msg.text.toLowerCase();

    if (~text.indexOf("–ø—Ä–∏–≤–µ—Ç")) {
      bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç–∏–∫, " + first_name + "!");
    } else if (~text.indexOf("–∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞")) {
      // bot.sendMessage(chatId, "–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞üíµ");
      for (let i = 1; i < 6; i++) {
        bot.sendMessage(
          chatId,
          fileContent[i][0] +
            "\n\t" +
            fileContent[i][1] +
            "\n\t" +
            fileContent[i][2]
        );
      }
    } else if (~text.indexOf("–∫—É—Ä—Å –µ–≤—Ä–æ")) {
      // bot.sendMessage(chatId, "–ö—É—Ä—Å –ï–≤—Ä–æüí∂");
      for (let i = 1; i < 6; i++) {
        bot.sendMessage(
          chatId,
          fileContent[i][0] +
            "\n\t" +
            fileContent[i][3] +
            "\n\t" +
            fileContent[i][4]
        );
      }
    } else if (~text.indexOf("–∫–ª–∞–≤")) {
      openKeyboard(chatId);
    } else {
      bot.sendMessage(chatId, "Unknown command");
    }
  }
});

bot.onText(/\/start/, (msg, match) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç–∏–∫, " + msg.chat.first_name + "!");
  openKeyboard(chatId);
});

const openKeyboard = (chatId) => {
  bot.sendMessage(chatId, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞", {
    reply_markup: {
      keyboard: [
        [
          {
            text: "–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞",
          },
          {
            text: "–ö—É—Ä—Å –ï–≤—Ä–æ",
          },
        ],
      ],
    },
  });
};
